Assigment Overview

This assignment was focused on creating a single pair of client-server applications using Remote Procedure Calls which I implemented using JAVA RMI and making it multithreaded so that the server can handle multiple client requests at the same time and thus handling mutual exclusion. Comparing it to the first project, I found it much easier to implement than the Socket based implementations using TCP and UDP. So the purpose of this assignment according to me was to get understanding of how middleware helps to improve the coding aspects of distributed system. This was just one level of the middleware that we used and using the proper stack of middleware can help building complex distributed applications quite easily. This project also focused on making the server thread safe, thus enabling us to debug the issues of thread synchronization thus helping to handle multiple clients at the same time, which makes the project closer to a real world distributed system than the one implemented in the first project. Furthermore, the use of docker platform became much clearer by creating and using docker images and containers for this project as well. Hence the main aim of the project was to further improve upon the building of complex distributed systems using already built services and middleware that help productivity.